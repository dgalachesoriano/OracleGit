import os

import click

from adapters.filesystem_snapshot_repository import FileSystemSnapshotRepository
from adapters.oracle.oracle_connector import OracleDatabaseConnector
from config.env import ORACLE_DSN, ORACLE_PASSWORD, ORACLE_USER
from core.application.diff_service import DiffService
from core.application.rollback_service import RollbackService
from core.application.snapshot_service import SnapshotService

SNAPSHOT_DIR = "data/snapshots"


@click.command("rollback")
@click.argument("table_name")
@click.option("--to", "snapshot_file", required=True, help="Snapshot file to restore")
@click.option(
    "--keys", required=True, help="Comma-separated key fields to identify rows"
)
@click.option(
    "--output",
    "output_path",
    required=False,
    help="Path to save generated SQL rollback script",
)
def rollback_snapshot(table_name, snapshot_file, keys, output_path):
    """Generate rollback SQL statements to revert a table to a previous snapshot"""

    # Dependencias
    db = OracleDatabaseConnector(
        user=ORACLE_USER, password=ORACLE_PASSWORD, dsn=ORACLE_DSN
    )
    repo = FileSystemSnapshotRepository(base_path=SNAPSHOT_DIR)

    snapshot_service = SnapshotService(db_connector=db, snapshot_repository=repo)
    diff_service = DiffService()
    rollback_service = RollbackService()

    try:
        # Snapshot actual desde la BBDD simulada
        current_snapshot = snapshot_service.create_snapshot(table_name)
        # Snapshot objetivo
        target_snapshot = repo.load(snapshot_file)
        # Claves primarias
        key_fields = [k.strip() for k in keys.split(",")]

        # Generar el diff entre el actual y el deseado
        diff = diff_service.compare_snapshots(
            old=current_snapshot, new=target_snapshot, key_fields=key_fields
        )

        # Generar SQL de rollback
        sql_statements = rollback_service.generate_rollback_sql(
            diff=diff, table_name=table_name, key_fields=key_fields
        )

        if not sql_statements:
            click.echo("‚ÑπÔ∏è No changes detected. Nothing to rollback.")
            return

        if output_path:
            os.makedirs(os.path.dirname(output_path), exist_ok=True)
            with open(output_path, "w") as f:
                f.write("-- Rollback SQL generated by OracleGit CLI\n\n")
                f.write("\n".join(sql_statements))
            click.echo(f"üíæ Rollback SQL written to {output_path}")
        else:
            click.echo("üì¶ Generated rollback SQL statements:\n")
            for stmt in sql_statements:
                click.echo(stmt)

    except Exception as e:
        click.echo(f"‚ùå Rollback generation failed: {e}")
